<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        3VhH568eJg0AAAAASUVORK5CYII=
</value>
  </data>
</root>